name: Build Windows Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Setup jpackage
      shell: pwsh
      run: |
        Write-Host "jpackage available with JDK 17+"
        jpackage --version
        New-Item -ItemType Directory -Force -Path "target/dist" | Out-Null
        
    - name: Create Windows executable with jpackage
      shell: pwsh
      run: |
        $commonArgs = @(
          "--name", "RetroArcade",
          "--input", "target",
          "--main-jar", "arcade-game-executable.jar",
          "--main-class", "org.example.snakegame.GameApplication",
          "--type", "exe",
          "--win-dir-chooser",
          "--win-shortcut",
          "--win-menu",
          "--win-menu-group", "Retro Games",
          "--app-version", "1.0",
          "--vendor", "Retro Arcade Team",
          "--copyright", "Copyright 2024 Retro Arcade Team",
          "--description", "Classic Snake and Pong games with retro style",
          "--dest", "target/dist",
          "--verbose"
        )

        if (Test-Path "src/main/resources/icon.ico") {
          $commonArgs += @("--icon", "src/main/resources/icon.ico")
        }

        jpackage @commonArgs
      continue-on-error: true
      
    - name: Create Windows executable (fallback without icon)
      if: failure()
      shell: pwsh
      run: |
        $args = @(
          "--name", "RetroArcade",
          "--input", "target",
          "--main-jar", "arcade-game-executable.jar",
          "--main-class", "org.example.snakegame.GameApplication",
          "--type", "exe",
          "--win-dir-chooser",
          "--win-shortcut",
          "--win-menu",
          "--win-menu-group", "Retro Games",
          "--app-version", "1.0",
          "--vendor", "Retro Arcade Team",
          "--copyright", "Copyright 2024 Retro Arcade Team",
          "--description", "Classic Snake and Pong games with retro style",
          "--dest", "target/dist",
          "--verbose"
        )
        jpackage @args
          
    - name: Create ZIP package
      shell: pwsh
      run: |
        if (!(Test-Path "target/dist")) {
          throw "target/dist directory not found. jpackage may have failed."
        }
        Compress-Archive -Path "target/dist/*" -DestinationPath "target/RetroArcade-Windows.zip" -Force
        
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4
      with:
        name: RetroArcade-Windows-Executable
        path: target/dist/*.exe
        
    - name: Upload ZIP package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: RetroArcade-Windows-Package
        path: target/RetroArcade-Windows.zip
        
    - name: Publish Package to GitHub Packages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Configuration Maven pour GitHub Packages selon la doc officielle
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml << 'EOF'
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
          <activeProfiles>
            <activeProfile>github</activeProfile>
          </activeProfiles>
          <profiles>
            <profile>
              <id>github</id>
              <repositories>
                <repository>
                  <id>central</id>
                  <url>https://repo.maven.apache.org/maven2</url>
                </repository>
                <repository>
                  <id>github</id>
                  <url>https://maven.pkg.github.com/TheDevApprentice/Arcade-Game</url>
                  <snapshots>
                    <enabled>true</enabled>
                  </snapshots>
                </repository>
              </repositories>
            </profile>
          </profiles>
          <servers>
            <server>
              <id>github</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.TOKEN_WORKFLOW_PACKAGING }}</password>
            </server>
          </servers>
        </settings>
        EOF
        
        # Deploy vers GitHub Packages
        mvn deploy -DskipTests
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_WORKFLOW_PACKAGING }}
        

    - name: Generate release tag
      id: tag
      run: |
        echo "release_tag=build-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      shell: bash
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        name: "RetroArcade Build ${{ steps.tag.outputs.release_tag }}"
        body: |
          üéÆ **Retro Arcade - Windows Build**
          
          Automatic build from commit: ${{ github.sha }}
          
          ### üì¶ Installation
          1. Download `RetroArcade-1.0.exe`
          2. Run the installer
          3. Play! (No Java required)
          
          ### ‚ú® Features
          - Snake Game with neon effects
          - Pong Game with adjustable AI
          - Automatic score saving
          - Retro music and sound effects
          
          ### üì¶ Maven Package
          Also available as Maven dependency:
          ```xml
          <dependency>
            <groupId>org.example</groupId>
            <artifactId>arcade-game</artifactId>
            <version>1.0-SNAPSHOT</version>
          </dependency>
          ```

          Built with ‚ù§Ô∏è by GitHub Actions
        files: |
          target/dist/*.exe
          target/RetroArcade-Windows.zip
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_WORKFLOW_PACKAGING }}
