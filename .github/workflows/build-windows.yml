name: Build Windows Executable

on:
  push:
    branches: [ features ]
  pull_request:
    branches: [ features ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Setup jpackage
      run: |
        # jpackage est inclus avec JDK 17+
        echo "jpackage disponible avec JDK 17"
        jpackage --version
        
    - name: Create Windows executable with jpackage
      run: |
        jpackage ^
          --name "RetroArcade" ^
          --input "target/classes" ^
          --main-jar "arcade-game-1.0-SNAPSHOT.jar" ^
          --main-class "org.example.snakegame.GameApplication" ^
          --type "exe" ^
          --win-dir-chooser ^
          --win-shortcut ^
          --win-menu ^
          --win-menu-group "Retro Games" ^
          --app-version "1.0" ^
          --vendor "Retro Arcade Team" ^
          --copyright "Copyright 2024 Retro Arcade Team" ^
          --description "Classic Snake and Pong games with retro style" ^
          --icon "src/main/resources/icon.ico" ^
          --dest "target/dist" ^
          --verbose
      continue-on-error: true
      
    - name: Create Windows executable (fallback without icon)
      if: failure()
      run: |
        jpackage ^
          --name "RetroArcade" ^
          --input "target/classes" ^
          --main-jar "arcade-game-1.0-SNAPSHOT.jar" ^
          --main-class "org.example.snakegame.GameApplication" ^
          --type "exe" ^
          --win-dir-chooser ^
          --win-shortcut ^
          --win-menu ^
          --win-menu-group "Retro Games" ^
          --app-version "1.0" ^
          --vendor "Retro Arcade Team" ^
          --copyright "Copyright 2024 Retro Arcade Team" ^
          --description "Classic Snake and Pong games with retro style" ^
          --dest "target/dist" ^
          --verbose
          
    - name: Create ZIP package
      run: |
        cd target/dist
        7z a -tzip ../RetroArcade-Windows.zip *
        
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4
      with:
        name: RetroArcade-Windows-Executable
        path: target/dist/*.exe
        
    - name: Upload ZIP package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: RetroArcade-Windows-Package
        path: target/RetroArcade-Windows.zip
        
    - name: Create Release (if on main branch)
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/dist/*.exe
          target/RetroArcade-Windows.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
